{
  "version": 3,
  "sources": ["../../@material-ui/core/esm/Card/Card.js"],
  "sourcesContent": ["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport Paper from '../Paper';\r\nimport withStyles from '../styles/withStyles';\r\nexport var styles = {\r\n  /* Styles applied to the root element. */\r\n  root: {\r\n    overflow: 'hidden'\r\n  }\r\n};\r\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\r\n  var classes = props.classes,\r\n      className = props.className,\r\n      _props$raised = props.raised,\r\n      raised = _props$raised === void 0 ? false : _props$raised,\r\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\r\n\r\n  return /*#__PURE__*/React.createElement(Paper, _extends({\r\n    className: clsx(classes.root, className),\r\n    elevation: raised ? 8 : 1,\r\n    ref: ref\r\n  }, other));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * The content of the component.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * If `true`, the card will use raised styling.\r\n   */\r\n  raised: PropTypes.bool\r\n} : void 0;\r\nexport default withStyles(styles, {\r\n  name: 'MuiCard'\r\n})(Card);"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA,YAAuB;AACvB,wBAAsB;AACtB;AAEA;AACO,IAAI,SAAS;AAAA;AAAA,EAElB,MAAM;AAAA,IACJ,UAAU;AAAA,EACZ;AACF;AACA,IAAI,OAA0B,iBAAW,SAASA,MAAK,OAAO,KAAK;AACjE,MAAI,UAAU,MAAM,SAChB,YAAY,MAAM,WAClB,gBAAgB,MAAM,QACtB,SAAS,kBAAkB,SAAS,QAAQ,eAC5C,QAAQ,yBAAyB,OAAO,CAAC,WAAW,aAAa,QAAQ,CAAC;AAE9E,SAA0B,oBAAc,eAAO,SAAS;AAAA,IACtD,WAAW,eAAK,QAAQ,MAAM,SAAS;AAAA,IACvC,WAAW,SAAS,IAAI;AAAA,IACxB;AAAA,EACF,GAAG,KAAK,CAAC;AACX,CAAC;AACD,OAAwC,KAAK,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASvD,UAAU,kBAAAC,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAMpB,SAAS,kBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA,EAKnB,WAAW,kBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA,EAKrB,QAAQ,kBAAAA,QAAU;AACpB,IAAI;AACJ,IAAO,eAAQ,mBAAW,QAAQ;AAAA,EAChC,MAAM;AACR,CAAC,EAAE,IAAI;",
  "names": ["Card", "PropTypes"]
}
