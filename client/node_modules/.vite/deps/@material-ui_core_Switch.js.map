{
  "version": 3,
  "sources": ["../../@material-ui/core/esm/Switch/Switch.js", "../../@material-ui/core/esm/internal/SwitchBase.js"],
  "sourcesContent": ["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\n// @inheritedComponent IconButton\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { refType } from '@material-ui/utils';\r\nimport withStyles from '../styles/withStyles';\r\nimport { alpha } from '../styles/colorManipulator';\r\nimport capitalize from '../utils/capitalize';\r\nimport SwitchBase from '../internal/SwitchBase';\r\nexport var styles = function styles(theme) {\r\n  return {\r\n    /* Styles applied to the root element. */\r\n    root: {\r\n      display: 'inline-flex',\r\n      width: 34 + 12 * 2,\r\n      height: 14 + 12 * 2,\r\n      overflow: 'hidden',\r\n      padding: 12,\r\n      boxSizing: 'border-box',\r\n      position: 'relative',\r\n      flexShrink: 0,\r\n      zIndex: 0,\r\n      // Reset the stacking context.\r\n      verticalAlign: 'middle',\r\n      // For correct alignment with the text.\r\n      '@media print': {\r\n        colorAdjust: 'exact'\r\n      }\r\n    },\r\n\r\n    /* Styles applied to the root element if `edge=\"start\"`. */\r\n    edgeStart: {\r\n      marginLeft: -8\r\n    },\r\n\r\n    /* Styles applied to the root element if `edge=\"end\"`. */\r\n    edgeEnd: {\r\n      marginRight: -8\r\n    },\r\n\r\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\r\n    switchBase: {\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n      zIndex: 1,\r\n      // Render above the focus ripple.\r\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\r\n      transition: theme.transitions.create(['left', 'transform'], {\r\n        duration: theme.transitions.duration.shortest\r\n      }),\r\n      '&$checked': {\r\n        transform: 'translateX(20px)'\r\n      },\r\n      '&$disabled': {\r\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\r\n      },\r\n      '&$checked + $track': {\r\n        opacity: 0.5\r\n      },\r\n      '&$disabled + $track': {\r\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\r\n      }\r\n    },\r\n\r\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\r\n    colorPrimary: {\r\n      '&$checked': {\r\n        color: theme.palette.primary.main,\r\n        '&:hover': {\r\n          backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\r\n          '@media (hover: none)': {\r\n            backgroundColor: 'transparent'\r\n          }\r\n        }\r\n      },\r\n      '&$disabled': {\r\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\r\n      },\r\n      '&$checked + $track': {\r\n        backgroundColor: theme.palette.primary.main\r\n      },\r\n      '&$disabled + $track': {\r\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\r\n      }\r\n    },\r\n\r\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\r\n    colorSecondary: {\r\n      '&$checked': {\r\n        color: theme.palette.secondary.main,\r\n        '&:hover': {\r\n          backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\r\n          '@media (hover: none)': {\r\n            backgroundColor: 'transparent'\r\n          }\r\n        }\r\n      },\r\n      '&$disabled': {\r\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\r\n      },\r\n      '&$checked + $track': {\r\n        backgroundColor: theme.palette.secondary.main\r\n      },\r\n      '&$disabled + $track': {\r\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\r\n      }\r\n    },\r\n\r\n    /* Styles applied to the root element if `size=\"small\"`. */\r\n    sizeSmall: {\r\n      width: 40,\r\n      height: 24,\r\n      padding: 7,\r\n      '& $thumb': {\r\n        width: 16,\r\n        height: 16\r\n      },\r\n      '& $switchBase': {\r\n        padding: 4,\r\n        '&$checked': {\r\n          transform: 'translateX(16px)'\r\n        }\r\n      }\r\n    },\r\n\r\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\r\n    checked: {},\r\n\r\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\r\n    disabled: {},\r\n\r\n    /* Styles applied to the internal SwitchBase component's input element. */\r\n    input: {\r\n      left: '-100%',\r\n      width: '300%'\r\n    },\r\n\r\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\r\n    thumb: {\r\n      boxShadow: theme.shadows[1],\r\n      backgroundColor: 'currentColor',\r\n      width: 20,\r\n      height: 20,\r\n      borderRadius: '50%'\r\n    },\r\n\r\n    /* Styles applied to the track element. */\r\n    track: {\r\n      height: '100%',\r\n      width: '100%',\r\n      borderRadius: 14 / 2,\r\n      zIndex: -1,\r\n      transition: theme.transitions.create(['opacity', 'background-color'], {\r\n        duration: theme.transitions.duration.shortest\r\n      }),\r\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\r\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\r\n    }\r\n  };\r\n};\r\nvar Switch = /*#__PURE__*/React.forwardRef(function Switch(props, ref) {\r\n  var classes = props.classes,\r\n      className = props.className,\r\n      _props$color = props.color,\r\n      color = _props$color === void 0 ? 'secondary' : _props$color,\r\n      _props$edge = props.edge,\r\n      edge = _props$edge === void 0 ? false : _props$edge,\r\n      _props$size = props.size,\r\n      size = _props$size === void 0 ? 'medium' : _props$size,\r\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\r\n\r\n  var icon = /*#__PURE__*/React.createElement(\"span\", {\r\n    className: classes.thumb\r\n  });\r\n  return /*#__PURE__*/React.createElement(\"span\", {\r\n    className: clsx(classes.root, className, {\r\n      'start': classes.edgeStart,\r\n      'end': classes.edgeEnd\r\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\r\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\r\n    type: \"checkbox\",\r\n    icon: icon,\r\n    checkedIcon: icon,\r\n    classes: {\r\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\r\n      input: classes.input,\r\n      checked: classes.checked,\r\n      disabled: classes.disabled\r\n    },\r\n    ref: ref\r\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\r\n    className: classes.track\r\n  }));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * If `true`, the component is checked.\r\n   */\r\n  checked: PropTypes.bool,\r\n\r\n  /**\r\n   * The icon to display when the component is checked.\r\n   */\r\n  checkedIcon: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * The color of the component. It supports those theme colors that make sense for this component.\r\n   */\r\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  defaultChecked: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the switch will be disabled.\r\n   */\r\n  disabled: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the ripple effect will be disabled.\r\n   */\r\n  disableRipple: PropTypes.bool,\r\n\r\n  /**\r\n   * If given, uses a negative margin to counteract the padding on one\r\n   * side (this is often helpful for aligning the left or right\r\n   * side of the icon with content above or below, without ruining the border\r\n   * size and shape).\r\n   */\r\n  edge: PropTypes.oneOf(['end', 'start', false]),\r\n\r\n  /**\r\n   * The icon to display when the component is unchecked.\r\n   */\r\n  icon: PropTypes.node,\r\n\r\n  /**\r\n   * The id of the `input` element.\r\n   */\r\n  id: PropTypes.string,\r\n\r\n  /**\r\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\r\n   */\r\n  inputProps: PropTypes.object,\r\n\r\n  /**\r\n   * Pass a ref to the `input` element.\r\n   */\r\n  inputRef: refType,\r\n\r\n  /**\r\n   * Callback fired when the state is changed.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * You can pull out the new value by accessing `event.target.value` (string).\r\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\r\n   */\r\n  onChange: PropTypes.func,\r\n\r\n  /**\r\n   * If `true`, the `input` element will be required.\r\n   */\r\n  required: PropTypes.bool,\r\n\r\n  /**\r\n   * The size of the switch.\r\n   * `small` is equivalent to the dense switch styling.\r\n   */\r\n  size: PropTypes.oneOf(['medium', 'small']),\r\n\r\n  /**\r\n   * The value of the component. The DOM API casts this to a string.\r\n   * The browser uses \"on\" as the default value.\r\n   */\r\n  value: PropTypes.any\r\n} : void 0;\r\nexport default withStyles(styles, {\r\n  name: 'MuiSwitch'\r\n})(Switch);", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\r\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { refType } from '@material-ui/utils';\r\nimport useControlled from '../utils/useControlled';\r\nimport useFormControl from '../FormControl/useFormControl';\r\nimport withStyles from '../styles/withStyles';\r\nimport IconButton from '../IconButton';\r\nexport var styles = {\r\n  root: {\r\n    padding: 9\r\n  },\r\n  checked: {},\r\n  disabled: {},\r\n  input: {\r\n    cursor: 'inherit',\r\n    position: 'absolute',\r\n    opacity: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n    top: 0,\r\n    left: 0,\r\n    margin: 0,\r\n    padding: 0,\r\n    zIndex: 1\r\n  }\r\n};\r\n/**\r\n * @ignore - internal component.\r\n */\r\n\r\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\r\n  var autoFocus = props.autoFocus,\r\n      checkedProp = props.checked,\r\n      checkedIcon = props.checkedIcon,\r\n      classes = props.classes,\r\n      className = props.className,\r\n      defaultChecked = props.defaultChecked,\r\n      disabledProp = props.disabled,\r\n      icon = props.icon,\r\n      id = props.id,\r\n      inputProps = props.inputProps,\r\n      inputRef = props.inputRef,\r\n      name = props.name,\r\n      onBlur = props.onBlur,\r\n      onChange = props.onChange,\r\n      onFocus = props.onFocus,\r\n      readOnly = props.readOnly,\r\n      required = props.required,\r\n      tabIndex = props.tabIndex,\r\n      type = props.type,\r\n      value = props.value,\r\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\r\n\r\n  var _useControlled = useControlled({\r\n    controlled: checkedProp,\r\n    default: Boolean(defaultChecked),\r\n    name: 'SwitchBase',\r\n    state: 'checked'\r\n  }),\r\n      _useControlled2 = _slicedToArray(_useControlled, 2),\r\n      checked = _useControlled2[0],\r\n      setCheckedState = _useControlled2[1];\r\n\r\n  var muiFormControl = useFormControl();\r\n\r\n  var handleFocus = function handleFocus(event) {\r\n    if (onFocus) {\r\n      onFocus(event);\r\n    }\r\n\r\n    if (muiFormControl && muiFormControl.onFocus) {\r\n      muiFormControl.onFocus(event);\r\n    }\r\n  };\r\n\r\n  var handleBlur = function handleBlur(event) {\r\n    if (onBlur) {\r\n      onBlur(event);\r\n    }\r\n\r\n    if (muiFormControl && muiFormControl.onBlur) {\r\n      muiFormControl.onBlur(event);\r\n    }\r\n  };\r\n\r\n  var handleInputChange = function handleInputChange(event) {\r\n    var newChecked = event.target.checked;\r\n    setCheckedState(newChecked);\r\n\r\n    if (onChange) {\r\n      // TODO v5: remove the second argument.\r\n      onChange(event, newChecked);\r\n    }\r\n  };\r\n\r\n  var disabled = disabledProp;\r\n\r\n  if (muiFormControl) {\r\n    if (typeof disabled === 'undefined') {\r\n      disabled = muiFormControl.disabled;\r\n    }\r\n  }\r\n\r\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\r\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\r\n    component: \"span\",\r\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\r\n    disabled: disabled,\r\n    tabIndex: null,\r\n    role: undefined,\r\n    onFocus: handleFocus,\r\n    onBlur: handleBlur,\r\n    ref: ref\r\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\r\n    autoFocus: autoFocus,\r\n    checked: checkedProp,\r\n    defaultChecked: defaultChecked,\r\n    className: classes.input,\r\n    disabled: disabled,\r\n    id: hasLabelFor && id,\r\n    name: name,\r\n    onChange: handleInputChange,\r\n    readOnly: readOnly,\r\n    ref: inputRef,\r\n    required: required,\r\n    tabIndex: tabIndex,\r\n    type: type,\r\n    value: value\r\n  }, inputProps)), checked ? checkedIcon : icon);\r\n}); // NB: If changed, please update Checkbox, Switch and Radio\r\n// so that the API documentation is updated.\r\n\r\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\r\n  /**\r\n   * If `true`, the `input` element will be focused during the first mount.\r\n   */\r\n  autoFocus: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the component is checked.\r\n   */\r\n  checked: PropTypes.bool,\r\n\r\n  /**\r\n   * The icon to display when the component is checked.\r\n   */\r\n  checkedIcon: PropTypes.node.isRequired,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object.isRequired,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  defaultChecked: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the switch will be disabled.\r\n   */\r\n  disabled: PropTypes.bool,\r\n\r\n  /**\r\n   * The icon to display when the component is unchecked.\r\n   */\r\n  icon: PropTypes.node.isRequired,\r\n\r\n  /**\r\n   * The id of the `input` element.\r\n   */\r\n  id: PropTypes.string,\r\n\r\n  /**\r\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\r\n   */\r\n  inputProps: PropTypes.object,\r\n\r\n  /**\r\n   * Pass a ref to the `input` element.\r\n   */\r\n  inputRef: refType,\r\n\r\n  /*\r\n   * @ignore\r\n   */\r\n  name: PropTypes.string,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  onBlur: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired when the state is changed.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\r\n   */\r\n  onChange: PropTypes.func,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  onFocus: PropTypes.func,\r\n\r\n  /**\r\n   * It prevents the user from changing the value of the field\r\n   * (not from interacting with the field).\r\n   */\r\n  readOnly: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the `input` element will be required.\r\n   */\r\n  required: PropTypes.bool,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n\r\n  /**\r\n   * The input component prop `type`.\r\n   */\r\n  type: PropTypes.string.isRequired,\r\n\r\n  /**\r\n   * The value of the component.\r\n   */\r\n  value: PropTypes.any\r\n} : void 0;\r\nexport default withStyles(styles, {\r\n  name: 'PrivateSwitchBase'\r\n})(SwitchBase);"],
  "mappings": "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",
  "names": ["React", "import_prop_types", "SwitchBase", "handleFocus", "handleBlur", "handleInputChange", "PropTypes", "styles", "Switch", "PropTypes"]
}
