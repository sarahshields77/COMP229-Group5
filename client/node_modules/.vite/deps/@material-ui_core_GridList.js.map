{
  "version": 3,
  "sources": ["../../@material-ui/core/esm/GridList/GridList.js"],
  "sourcesContent": ["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\nimport * as React from 'react';\r\nimport { isFragment } from 'react-is';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport withStyles from '../styles/withStyles';\r\nexport var styles = {\r\n  /* Styles applied to the root element. */\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    overflowY: 'auto',\r\n    listStyle: 'none',\r\n    padding: 0,\r\n    WebkitOverflowScrolling: 'touch' // Add iOS momentum scrolling.\r\n\r\n  }\r\n};\r\nvar warnedOnce = false;\r\n/**\r\n * ⚠️ The GridList component was renamed to ImageList to align with the current Material Design naming.\r\n *\r\n * You should use `import { ImageList } from '@material-ui/core'`\r\n * or `import ImageList from '@material-ui/core/ImageList'`.\r\n */\r\n\r\nvar GridList = /*#__PURE__*/React.forwardRef(function GridList(props, ref) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (!warnedOnce) {\r\n      warnedOnce = true;\r\n      console.error(['Material-UI: The GridList component was renamed to ImageList to align with the current Material Design naming.', '', \"You should use `import { ImageList } from '@material-ui/core'`\", \"or `import ImageList from '@material-ui/core/ImageList'`.\"].join('\\n'));\r\n    }\r\n  }\r\n\r\n  var _props$cellHeight = props.cellHeight,\r\n      cellHeight = _props$cellHeight === void 0 ? 180 : _props$cellHeight,\r\n      children = props.children,\r\n      classes = props.classes,\r\n      className = props.className,\r\n      _props$cols = props.cols,\r\n      cols = _props$cols === void 0 ? 2 : _props$cols,\r\n      _props$component = props.component,\r\n      Component = _props$component === void 0 ? 'ul' : _props$component,\r\n      _props$spacing = props.spacing,\r\n      spacing = _props$spacing === void 0 ? 4 : _props$spacing,\r\n      style = props.style,\r\n      other = _objectWithoutProperties(props, [\"cellHeight\", \"children\", \"classes\", \"className\", \"cols\", \"component\", \"spacing\", \"style\"]);\r\n\r\n  return /*#__PURE__*/React.createElement(Component, _extends({\r\n    className: clsx(classes.root, className),\r\n    ref: ref,\r\n    style: _extends({\r\n      margin: -spacing / 2\r\n    }, style)\r\n  }, other), React.Children.map(children, function (child) {\r\n    if (! /*#__PURE__*/React.isValidElement(child)) {\r\n      return null;\r\n    }\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (isFragment(child)) {\r\n        console.error([\"Material-UI: The GridList component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\r\n      }\r\n    }\r\n\r\n    var childCols = child.props.cols || 1;\r\n    var childRows = child.props.rows || 1;\r\n    return /*#__PURE__*/React.cloneElement(child, {\r\n      style: _extends({\r\n        width: \"\".concat(100 / cols * childCols, \"%\"),\r\n        height: cellHeight === 'auto' ? 'auto' : cellHeight * childRows + spacing,\r\n        padding: spacing / 2\r\n      }, child.props.style)\r\n    });\r\n  }));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? GridList.propTypes = {\r\n  /**\r\n   * Number of px for one cell height.\r\n   * You can set `'auto'` if you want to let the children determine the height.\r\n   */\r\n  cellHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['auto'])]),\r\n\r\n  /**\r\n   * Grid Tiles that will be in Grid List.\r\n   */\r\n  children: PropTypes.node.isRequired,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object.isRequired,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * Number of columns.\r\n   */\r\n  cols: PropTypes.number,\r\n\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\r\n  component: PropTypes\r\n  /* @typescript-to-proptypes-ignore */\r\n  .elementType,\r\n\r\n  /**\r\n   * Number of px for the spacing between tiles.\r\n   */\r\n  spacing: PropTypes.number,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  style: PropTypes.object\r\n} : void 0;\r\nexport default withStyles(styles, {\r\n  name: 'MuiGridList'\r\n})(GridList);"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA,YAAuB;AACvB,sBAA2B;AAC3B,wBAAsB;AACtB;AACA;AACO,IAAI,SAAS;AAAA;AAAA,EAElB,MAAM;AAAA,IACJ,SAAS;AAAA,IACT,UAAU;AAAA,IACV,WAAW;AAAA,IACX,WAAW;AAAA,IACX,SAAS;AAAA,IACT,yBAAyB;AAAA;AAAA,EAE3B;AACF;AACA,IAAI,aAAa;AAQjB,IAAI,WAA8B,iBAAW,SAASA,UAAS,OAAO,KAAK;AACzE,MAAI,MAAuC;AACzC,QAAI,CAAC,YAAY;AACf,mBAAa;AACb,cAAQ,MAAM,CAAC,kHAAkH,IAAI,kEAAkE,2DAA2D,EAAE,KAAK,IAAI,CAAC;AAAA,IAChR;AAAA,EACF;AAEA,MAAI,oBAAoB,MAAM,YAC1B,aAAa,sBAAsB,SAAS,MAAM,mBAClD,WAAW,MAAM,UACjB,UAAU,MAAM,SAChB,YAAY,MAAM,WAClB,cAAc,MAAM,MACpB,OAAO,gBAAgB,SAAS,IAAI,aACpC,mBAAmB,MAAM,WACzB,YAAY,qBAAqB,SAAS,OAAO,kBACjD,iBAAiB,MAAM,SACvB,UAAU,mBAAmB,SAAS,IAAI,gBAC1C,QAAQ,MAAM,OACd,QAAQ,yBAAyB,OAAO,CAAC,cAAc,YAAY,WAAW,aAAa,QAAQ,aAAa,WAAW,OAAO,CAAC;AAEvI,SAA0B,oBAAc,WAAW,SAAS;AAAA,IAC1D,WAAW,eAAK,QAAQ,MAAM,SAAS;AAAA,IACvC;AAAA,IACA,OAAO,SAAS;AAAA,MACd,QAAQ,CAAC,UAAU;AAAA,IACrB,GAAG,KAAK;AAAA,EACV,GAAG,KAAK,GAAS,eAAS,IAAI,UAAU,SAAU,OAAO;AACvD,QAAI,CAAqB,qBAAe,KAAK,GAAG;AAC9C,aAAO;AAAA,IACT;AAEA,QAAI,MAAuC;AACzC,cAAI,4BAAW,KAAK,GAAG;AACrB,gBAAQ,MAAM,CAAC,6EAA6E,sCAAsC,EAAE,KAAK,IAAI,CAAC;AAAA,MAChJ;AAAA,IACF;AAEA,QAAI,YAAY,MAAM,MAAM,QAAQ;AACpC,QAAI,YAAY,MAAM,MAAM,QAAQ;AACpC,WAA0B,mBAAa,OAAO;AAAA,MAC5C,OAAO,SAAS;AAAA,QACd,OAAO,GAAG,OAAO,MAAM,OAAO,WAAW,GAAG;AAAA,QAC5C,QAAQ,eAAe,SAAS,SAAS,aAAa,YAAY;AAAA,QAClE,SAAS,UAAU;AAAA,MACrB,GAAG,MAAM,MAAM,KAAK;AAAA,IACtB,CAAC;AAAA,EACH,CAAC,CAAC;AACJ,CAAC;AACD,OAAwC,SAAS,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,EAK3D,YAAY,kBAAAC,QAAU,UAAU,CAAC,kBAAAA,QAAU,QAAQ,kBAAAA,QAAU,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA,EAK7E,UAAU,kBAAAA,QAAU,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,EAMzB,SAAS,kBAAAA,QAAU,OAAO;AAAA;AAAA;AAAA;AAAA,EAK1B,WAAW,kBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA,EAKrB,MAAM,kBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAMhB,WAAW,kBAAAA,QAEV;AAAA;AAAA;AAAA;AAAA,EAKD,SAAS,kBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA,EAKnB,OAAO,kBAAAA,QAAU;AACnB,IAAI;AACJ,IAAO,mBAAQ,mBAAW,QAAQ;AAAA,EAChC,MAAM;AACR,CAAC,EAAE,QAAQ;",
  "names": ["GridList", "PropTypes"]
}
