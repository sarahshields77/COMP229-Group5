{
  "version": 3,
  "sources": ["../../@material-ui/core/esm/Avatar/Avatar.js", "../../@material-ui/core/esm/internal/svg-icons/Person.js"],
  "sourcesContent": ["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { chainPropTypes } from '@material-ui/utils';\r\nimport withStyles from '../styles/withStyles';\r\nimport Person from '../internal/svg-icons/Person';\r\nexport var styles = function styles(theme) {\r\n  return {\r\n    /* Styles applied to the root element. */\r\n    root: {\r\n      position: 'relative',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      flexShrink: 0,\r\n      width: 40,\r\n      height: 40,\r\n      fontFamily: theme.typography.fontFamily,\r\n      fontSize: theme.typography.pxToRem(20),\r\n      lineHeight: 1,\r\n      borderRadius: '50%',\r\n      overflow: 'hidden',\r\n      userSelect: 'none'\r\n    },\r\n\r\n    /* Styles applied to the root element if not `src` or `srcSet`. */\r\n    colorDefault: {\r\n      color: theme.palette.background.default,\r\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\r\n    },\r\n\r\n    /* Styles applied to the root element if `variant=\"circle\"`. */\r\n    circle: {},\r\n\r\n    /* Styles applied to the root element if `variant=\"circular\"`. */\r\n    circular: {},\r\n\r\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\r\n    rounded: {\r\n      borderRadius: theme.shape.borderRadius\r\n    },\r\n\r\n    /* Styles applied to the root element if `variant=\"square\"`. */\r\n    square: {\r\n      borderRadius: 0\r\n    },\r\n\r\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\r\n    img: {\r\n      width: '100%',\r\n      height: '100%',\r\n      textAlign: 'center',\r\n      // Handle non-square image. The property isn't supported by IE 11.\r\n      objectFit: 'cover',\r\n      // Hide alt text.\r\n      color: 'transparent',\r\n      // Hide the image broken icon, only works on Chrome.\r\n      textIndent: 10000\r\n    },\r\n\r\n    /* Styles applied to the fallback icon */\r\n    fallback: {\r\n      width: '75%',\r\n      height: '75%'\r\n    }\r\n  };\r\n};\r\n\r\nfunction useLoaded(_ref) {\r\n  var src = _ref.src,\r\n      srcSet = _ref.srcSet;\r\n\r\n  var _React$useState = React.useState(false),\r\n      loaded = _React$useState[0],\r\n      setLoaded = _React$useState[1];\r\n\r\n  React.useEffect(function () {\r\n    if (!src && !srcSet) {\r\n      return undefined;\r\n    }\r\n\r\n    setLoaded(false);\r\n    var active = true;\r\n    var image = new Image();\r\n    image.src = src;\r\n    image.srcSet = srcSet;\r\n\r\n    image.onload = function () {\r\n      if (!active) {\r\n        return;\r\n      }\r\n\r\n      setLoaded('loaded');\r\n    };\r\n\r\n    image.onerror = function () {\r\n      if (!active) {\r\n        return;\r\n      }\r\n\r\n      setLoaded('error');\r\n    };\r\n\r\n    return function () {\r\n      active = false;\r\n    };\r\n  }, [src, srcSet]);\r\n  return loaded;\r\n}\r\n\r\nvar Avatar = /*#__PURE__*/React.forwardRef(function Avatar(props, ref) {\r\n  var alt = props.alt,\r\n      childrenProp = props.children,\r\n      classes = props.classes,\r\n      className = props.className,\r\n      _props$component = props.component,\r\n      Component = _props$component === void 0 ? 'div' : _props$component,\r\n      imgProps = props.imgProps,\r\n      sizes = props.sizes,\r\n      src = props.src,\r\n      srcSet = props.srcSet,\r\n      _props$variant = props.variant,\r\n      variant = _props$variant === void 0 ? 'circular' : _props$variant,\r\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\r\n\r\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\r\n\r\n  var loaded = useLoaded({\r\n    src: src,\r\n    srcSet: srcSet\r\n  });\r\n  var hasImg = src || srcSet;\r\n  var hasImgNotFailing = hasImg && loaded !== 'error';\r\n\r\n  if (hasImgNotFailing) {\r\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\r\n      alt: alt,\r\n      src: src,\r\n      srcSet: srcSet,\r\n      sizes: sizes,\r\n      className: classes.img\r\n    }, imgProps));\r\n  } else if (childrenProp != null) {\r\n    children = childrenProp;\r\n  } else if (hasImg && alt) {\r\n    children = alt[0];\r\n  } else {\r\n    children = /*#__PURE__*/React.createElement(Person, {\r\n      className: classes.fallback\r\n    });\r\n  }\r\n\r\n  return /*#__PURE__*/React.createElement(Component, _extends({\r\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\r\n    ref: ref\r\n  }, other), children);\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * Used in combination with `src` or `srcSet` to\r\n   * provide an alt attribute for the rendered `img` element.\r\n   */\r\n  alt: PropTypes.string,\r\n\r\n  /**\r\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\r\n   * This can be an element, or just a string.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: chainPropTypes(PropTypes.object, function (props) {\r\n    var classes = props.classes;\r\n\r\n    if (classes == null) {\r\n      return null;\r\n    }\r\n\r\n    if (classes.circle != null && // 2 classnames? one from withStyles the other must be custom\r\n    classes.circle.split(' ').length > 1) {\r\n      throw new Error(\"Material-UI: The `circle` class is deprecated. Use `circular` instead.\");\r\n    }\r\n\r\n    return null;\r\n  }),\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\r\n  component: PropTypes\r\n  /* @typescript-to-proptypes-ignore */\r\n  .elementType,\r\n\r\n  /**\r\n   * Attributes applied to the `img` element if the component is used to display an image.\r\n   * It can be used to listen for the loading error event.\r\n   */\r\n  imgProps: PropTypes.object,\r\n\r\n  /**\r\n   * The `sizes` attribute for the `img` element.\r\n   */\r\n  sizes: PropTypes.string,\r\n\r\n  /**\r\n   * The `src` attribute for the `img` element.\r\n   */\r\n  src: PropTypes.string,\r\n\r\n  /**\r\n   * The `srcSet` attribute for the `img` element.\r\n   * Use this attribute for responsive image display.\r\n   */\r\n  srcSet: PropTypes.string,\r\n\r\n  /**\r\n   * The shape of the avatar.\r\n   */\r\n  variant: chainPropTypes(PropTypes.oneOf(['circle', 'circular', 'rounded', 'square']), function (props) {\r\n    var variant = props.variant;\r\n\r\n    if (variant === 'circle') {\r\n      throw new Error('Material-UI: `variant=\"circle\"` is deprecated. Use `variant=\"circular\"` instead.');\r\n    }\r\n\r\n    return null;\r\n  })\r\n} : void 0;\r\nexport default withStyles(styles, {\r\n  name: 'MuiAvatar'\r\n})(Avatar);", "import * as React from 'react';\r\nimport createSvgIcon from '../../utils/createSvgIcon';\r\n/**\r\n * @ignore - internal component.\r\n */\r\n\r\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\r\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\r\n}), 'Person');"],
  "mappings": "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",
  "names": ["React", "styles", "Avatar", "PropTypes"]
}
