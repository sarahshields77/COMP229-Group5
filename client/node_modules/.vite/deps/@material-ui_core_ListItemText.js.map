{
  "version": 3,
  "sources": ["../../@material-ui/core/esm/ListItemText/ListItemText.js"],
  "sourcesContent": ["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport withStyles from '../styles/withStyles';\r\nimport Typography from '../Typography';\r\nimport ListContext from '../List/ListContext';\r\nexport var styles = {\r\n  /* Styles applied to the root element. */\r\n  root: {\r\n    flex: '1 1 auto',\r\n    minWidth: 0,\r\n    marginTop: 4,\r\n    marginBottom: 4\r\n  },\r\n\r\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\r\n  multiline: {\r\n    marginTop: 6,\r\n    marginBottom: 6\r\n  },\r\n\r\n  /* Styles applied to the `Typography` components if dense. */\r\n  dense: {},\r\n\r\n  /* Styles applied to the root element if `inset={true}`. */\r\n  inset: {\r\n    paddingLeft: 56\r\n  },\r\n\r\n  /* Styles applied to the primary `Typography` component. */\r\n  primary: {},\r\n\r\n  /* Styles applied to the secondary `Typography` component. */\r\n  secondary: {}\r\n};\r\nvar ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(props, ref) {\r\n  var children = props.children,\r\n      classes = props.classes,\r\n      className = props.className,\r\n      _props$disableTypogra = props.disableTypography,\r\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\r\n      _props$inset = props.inset,\r\n      inset = _props$inset === void 0 ? false : _props$inset,\r\n      primaryProp = props.primary,\r\n      primaryTypographyProps = props.primaryTypographyProps,\r\n      secondaryProp = props.secondary,\r\n      secondaryTypographyProps = props.secondaryTypographyProps,\r\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\r\n\r\n  var _React$useContext = React.useContext(ListContext),\r\n      dense = _React$useContext.dense;\r\n\r\n  var primary = primaryProp != null ? primaryProp : children;\r\n\r\n  if (primary != null && primary.type !== Typography && !disableTypography) {\r\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\r\n      variant: dense ? 'body2' : 'body1',\r\n      className: classes.primary,\r\n      component: \"span\",\r\n      display: \"block\"\r\n    }, primaryTypographyProps), primary);\r\n  }\r\n\r\n  var secondary = secondaryProp;\r\n\r\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\r\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\r\n      variant: \"body2\",\r\n      className: classes.secondary,\r\n      color: \"textSecondary\",\r\n      display: \"block\"\r\n    }, secondaryTypographyProps), secondary);\r\n  }\r\n\r\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\r\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\r\n    ref: ref\r\n  }, other), primary, secondary);\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * Alias for the `primary` prop.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * If `true`, the children won't be wrapped by a Typography component.\r\n   * This can be useful to render an alternative Typography variant by wrapping\r\n   * the `children` (or `primary`) text, and optional `secondary` text\r\n   * with the Typography component.\r\n   */\r\n  disableTypography: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the children will be indented.\r\n   * This should be used if there is no left avatar or left icon.\r\n   */\r\n  inset: PropTypes.bool,\r\n\r\n  /**\r\n   * The main content element.\r\n   */\r\n  primary: PropTypes.node,\r\n\r\n  /**\r\n   * These props will be forwarded to the primary typography component\r\n   * (as long as disableTypography is not `true`).\r\n   */\r\n  primaryTypographyProps: PropTypes.object,\r\n\r\n  /**\r\n   * The secondary content element.\r\n   */\r\n  secondary: PropTypes.node,\r\n\r\n  /**\r\n   * These props will be forwarded to the secondary typography component\r\n   * (as long as disableTypography is not `true`).\r\n   */\r\n  secondaryTypographyProps: PropTypes.object\r\n} : void 0;\r\nexport default withStyles(styles, {\r\n  name: 'MuiListItemText'\r\n})(ListItemText);"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA,YAAuB;AACvB,wBAAsB;AACtB;AACA;AAGO,IAAI,SAAS;AAAA;AAAA,EAElB,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,UAAU;AAAA,IACV,WAAW;AAAA,IACX,cAAc;AAAA,EAChB;AAAA;AAAA,EAGA,WAAW;AAAA,IACT,WAAW;AAAA,IACX,cAAc;AAAA,EAChB;AAAA;AAAA,EAGA,OAAO,CAAC;AAAA;AAAA,EAGR,OAAO;AAAA,IACL,aAAa;AAAA,EACf;AAAA;AAAA,EAGA,SAAS,CAAC;AAAA;AAAA,EAGV,WAAW,CAAC;AACd;AACA,IAAI,eAAkC,iBAAW,SAASA,cAAa,OAAO,KAAK;AACjF,MAAI,WAAW,MAAM,UACjB,UAAU,MAAM,SAChB,YAAY,MAAM,WAClB,wBAAwB,MAAM,mBAC9B,oBAAoB,0BAA0B,SAAS,QAAQ,uBAC/D,eAAe,MAAM,OACrB,QAAQ,iBAAiB,SAAS,QAAQ,cAC1C,cAAc,MAAM,SACpB,yBAAyB,MAAM,wBAC/B,gBAAgB,MAAM,WACtB,2BAA2B,MAAM,0BACjC,QAAQ,yBAAyB,OAAO,CAAC,YAAY,WAAW,aAAa,qBAAqB,SAAS,WAAW,0BAA0B,aAAa,0BAA0B,CAAC;AAE5L,MAAI,oBAA0B,iBAAW,mBAAW,GAChD,QAAQ,kBAAkB;AAE9B,MAAI,UAAU,eAAe,OAAO,cAAc;AAElD,MAAI,WAAW,QAAQ,QAAQ,SAAS,sBAAc,CAAC,mBAAmB;AACxE,cAA6B,oBAAc,oBAAY,SAAS;AAAA,MAC9D,SAAS,QAAQ,UAAU;AAAA,MAC3B,WAAW,QAAQ;AAAA,MACnB,WAAW;AAAA,MACX,SAAS;AAAA,IACX,GAAG,sBAAsB,GAAG,OAAO;AAAA,EACrC;AAEA,MAAI,YAAY;AAEhB,MAAI,aAAa,QAAQ,UAAU,SAAS,sBAAc,CAAC,mBAAmB;AAC5E,gBAA+B,oBAAc,oBAAY,SAAS;AAAA,MAChE,SAAS;AAAA,MACT,WAAW,QAAQ;AAAA,MACnB,OAAO;AAAA,MACP,SAAS;AAAA,IACX,GAAG,wBAAwB,GAAG,SAAS;AAAA,EACzC;AAEA,SAA0B,oBAAc,OAAO,SAAS;AAAA,IACtD,WAAW,eAAK,QAAQ,MAAM,WAAW,SAAS,QAAQ,OAAO,SAAS,QAAQ,OAAO,WAAW,aAAa,QAAQ,SAAS;AAAA,IAClI;AAAA,EACF,GAAG,KAAK,GAAG,SAAS,SAAS;AAC/B,CAAC;AACD,OAAwC,aAAa,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAS/D,UAAU,kBAAAC,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAMpB,SAAS,kBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA,EAKnB,WAAW,kBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQrB,mBAAmB,kBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAM7B,OAAO,kBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA,EAKjB,SAAS,kBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAMnB,wBAAwB,kBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA,EAKlC,WAAW,kBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAMrB,0BAA0B,kBAAAA,QAAU;AACtC,IAAI;AACJ,IAAO,uBAAQ,mBAAW,QAAQ;AAAA,EAChC,MAAM;AACR,CAAC,EAAE,YAAY;",
  "names": ["ListItemText", "PropTypes"]
}
